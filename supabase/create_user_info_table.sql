-- This script creates the user_info table and necessary policies
-- Run this in your Supabase SQL Editor

-- Create the user_info table
CREATE TABLE IF NOT EXISTS public.user_info (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  user_id uuid NOT NULL,
  user_name text NULL,
  name text NULL,
  bio text NULL,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users (id) ON UPDATE CASCADE ON DELETE CASCADE
);

-- Create a unique index on user_name to ensure usernames are unique
CREATE UNIQUE INDEX IF NOT EXISTS user_info_user_name_idx ON public.user_info (lower(user_name));

-- Create a unique index on user_id to ensure one profile per user
CREATE UNIQUE INDEX IF NOT EXISTS user_info_user_id_idx ON public.user_info (user_id);

-- Enable Row Level Security
ALTER TABLE public.user_info ENABLE ROW LEVEL SECURITY;

-- Create policies for row level security
-- Policy to allow users to view any profile (read-only)
CREATE POLICY "Users can view any profile" 
ON public.user_info FOR SELECT 
USING (true);

-- Policy to allow users to update only their own profile
CREATE POLICY "Users can update their own profile" 
ON public.user_info FOR UPDATE 
USING (auth.uid() = user_id);

-- Policy to allow users to insert only their own profile
CREATE POLICY "Users can insert their own profile" 
ON public.user_info FOR INSERT 
WITH CHECK (auth.uid() = user_id);

-- Grant permissions to authenticated users
GRANT ALL ON public.user_info TO authenticated;
GRANT USAGE ON SEQUENCE public.user_info_id_seq TO authenticated;
